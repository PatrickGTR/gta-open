{
	"generators":
	[
		{
			"enum": "enum CP_TYPE:__CP_TYPE { CP_TYPE_GROUND_NORMAL = 0, CP_TYPE_GROUND_FINISH = 1, CP_TYPE_GROUND_EMPTY = 2, CP_TYPE_AIR_NORMAL = 3, CP_TYPE_AIR_FINISH = 4, CP_TYPE_AIR_ROTATING = 5, CP_TYPE_AIR_STROBING = 6, CP_TYPE_AIR_SWINGING = 7, CP_TYPE_AIR_BOBBING = 8 }",
			"code": "native bool:SetPlayerRaceCheckpoint(playerid, $:type, Float:centreX, Float:centreY, Float:centreZ, Float:nextX, Float:nextY, Float:nextZ, Float:radius)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native AddPlayerClass(skin, Float:spawnX, Float:spawnY, Float:spawnZ, Float:angle, $:weapon1 = WEAPON_FIST, ammo1 = 0, $:weapon2 = WEAPON_FIST, ammo2 = 0, $:weapon3 = WEAPON_FIST, ammo3 = 0)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native AddPlayerClassEx(team, skin, Float:spawnX, Float:spawnY, Float:spawnZ, Float:angle, $:weapon1 = WEAPON_FIST, ammo1 = 0, $:weapon2 = WEAPON_FIST, ammo2 = 0, $:weapon3 = WEAPON_FIST, ammo3 = 0)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native bool:SetSpawnInfo(playerid, team, skin, Float:spawnX, Float:spawnY, Float:spawnZ, Float:angle, $:weapon1 = WEAPON_FIST, ammo1 = 0, $:weapon2 = WEAPON_FIST, ammo2 = 0, $:weapon3 = WEAPON_FIST, ammo3 = 0)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native GetPlayerClass(classid, &team, &skin = 0, &Float:spawnX = 0.0, &Float:spawnY = 0.0, &Float:spawnZ = 0.0, &Float:angle = 0.0, &$:weapon1 = WEAPON_FIST, &ammo1 = 0, &$:weapon2 = WEAPON_FIST, &ammo2 = 0, &$:weapon3 = WEAPON_FIST, &ammo3 = 0)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native EditPlayerClass(classid, team, skin, Float:spawnX, Float:spawnY, Float:spawnZ, Float:angle, $:weapon1 = WEAPON_FIST, ammo1 = 0, $:weapon2 = WEAPON_FIST, ammo2 = 0, $:weapon3 = WEAPON_FIST, ammo3 = 0)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native bool:GetWeaponName($:weaponid, weapon[], len = sizeof (weapon))"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native WEAPON_SLOT:GetWeaponSlot($:weaponid)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native GivePlayerWeapon(playerid, $:weaponid, ammo)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native RemovePlayerWeapon(playerid, $:weaponid)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native SetPlayerAmmo(playerid, $:weaponid, ammo)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native SetPlayerArmedWeapon(playerid, $:weaponid)"
		},
		{
			"enum": "enum WEAPON:__WEAPON { WEAPON_FIST, WEAPON_BRASSKNUCKLE, WEAPON_GOLFCLUB, WEAPON_NITESTICK, WEAPON_NIGHTSTICK = WEAPON_NITESTICK, WEAPON_KNIFE, WEAPON_BAT, WEAPON_SHOVEL, WEAPON_POOLSTICK, WEAPON_KATANA, WEAPON_CHAINSAW, WEAPON_DILDO, WEAPON_DILDO2, WEAPON_VIBRATOR, WEAPON_VIBRATOR2, WEAPON_FLOWER, WEAPON_CANE, WEAPON_GRENADE, WEAPON_TEARGAS, WEAPON_MOLTOV, WEAPON_MOLOTOV = WEAPON_MOLTOV, WEAPON_COLT45 = 22, WEAPON_SILENCED, WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SAWEDOFF, WEAPON_SHOTGSPA, WEAPON_UZI, WEAPON_MP5, WEAPON_AK47, WEAPON_M4, WEAPON_TEC9, WEAPON_RIFLE, WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER, WEAPON_FLAMETHROWER, WEAPON_MINIGUN, WEAPON_SATCHEL, WEAPON_BOMB, WEAPON_SPRAYCAN, WEAPON_FIREEXTINGUISHER, WEAPON_CAMERA, WEAPON_NIGHT_VISION_GOGGLES, WEAPON_THERMAL_GOGGLES, WEAPON_PARACHUTE, WEAPON_VEHICLE = 49, WEAPON_DROWN = 53, WEAPON_COLLISION, WEAPON_SPLAT = WEAPON_COLLISION }",
			"code": "native GetPlayerWeaponData(playerid, WEAPON_SLOT:slot, &$:weapons, &ammo)"
		},
		{
			"enum": "enum WEAPON_SLOT:__WEAPON_SLOT { WEAPON_SLOT_UNKNOWN                        = -1, WEAPON_SLOT_UNARMED                        =  0, WEAPON_SLOT_MELEE                          =  1, WEAPON_SLOT_PISTOL                         =  2, WEAPON_SLOT_SHOTGUN                        =  3, WEAPON_SLOT_MACHINE_GUN                    =  4, WEAPON_SLOT_ASSAULT_RIFLE                  =  5, WEAPON_SLOT_LONG_RIFLE                     =  6, WEAPON_SLOT_ARTILLERY                      =  7, WEAPON_SLOT_EXPLOSIVES                     =  8, WEAPON_SLOT_EQUIPMENT                      =  9, WEAPON_SLOT_GIFT                           = 10, WEAPON_SLOT_GADGET                         = 11, WEAPON_SLOT_DETONATOR                      = 12 }",
			"code": "native GetPlayerWeaponData(playerid, $:slot, &WEAPON:weapons, &ammo);"
		},
		{
			"enum": "enum PLAYER_MARKERS_MODE:__PLAYER_MARKERS_MODE { PLAYER_MARKERS_MODE_OFF, PLAYER_MARKERS_MODE_GLOBAL, PLAYER_MARKERS_MODE_STREAMED }",
			"code": "native void:ShowPlayerMarkers($:mode)"
		},
		{
			"enum": "enum DIALOG_STYLE:__DIALOG_STYLE { DIALOG_STYLE_MSGBOX, DIALOG_STYLE_INPUT, DIALOG_STYLE_LIST, DIALOG_STYLE_PASSWORD, DIALOG_STYLE_TABLIST, DIALOG_STYLE_TABLIST_HEADERS }",
			"code": "native bool:ShowPlayerDialog(playerid, dialogid, $:style, const title[], const body[], const button1[], const button2[], OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum DIALOG_STYLE:__DIALOG_STYLE { DIALOG_STYLE_MSGBOX, DIALOG_STYLE_INPUT, DIALOG_STYLE_LIST, DIALOG_STYLE_PASSWORD, DIALOG_STYLE_TABLIST, DIALOG_STYLE_TABLIST_HEADERS }",
			"code": "native bool:GetPlayerDialogData(playerid, &$:style, title[], titleSize = sizeof (title), body[], bodySize = sizeof (body), button1[], button1Size = sizeof (button1), button2[], button2Size = sizeof (button2))"
		},
		{
			"enum": "enum HTTP_METHOD:__HTTP_METHOD { HTTP_GET = 1, HTTP_POST, HTTP_HEAD }",
			"code": "native HTTP(index, $:method, const url[], const data[], const callback[])"
		},
		{
			"enum": "enum OBJECT_MATERIAL_SIZE:__OBJECT_MATERIAL_SIZE (+= 10) { OBJECT_MATERIAL_SIZE_32x32 = 10, OBJECT_MATERIAL_SIZE_64x32, OBJECT_MATERIAL_SIZE_64x64, OBJECT_MATERIAL_SIZE_128x32, OBJECT_MATERIAL_SIZE_128x64, OBJECT_MATERIAL_SIZE_128x128, OBJECT_MATERIAL_SIZE_256x32, OBJECT_MATERIAL_SIZE_256x64, OBJECT_MATERIAL_SIZE_256x128, OBJECT_MATERIAL_SIZE_256x256, OBJECT_MATERIAL_SIZE_512x64, OBJECT_MATERIAL_SIZE_512x128, OBJECT_MATERIAL_SIZE_512x256, OBJECT_MATERIAL_SIZE_512x512 }",
			"code": "native bool:SetObjectMaterialText(objectid, const text[], materialIndex = 0, $:materialSize = OBJECT_MATERIAL_SIZE_256x128, const fontFace[] = \\\"Arial\\\", fontSize = 24, bool:bold = true, fontColour = 0xFFFFFFFF, backgroundColour = 0, OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT, OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum OBJECT_MATERIAL_SIZE:__OBJECT_MATERIAL_SIZE (+= 10) { OBJECT_MATERIAL_SIZE_32x32 = 10, OBJECT_MATERIAL_SIZE_64x32, OBJECT_MATERIAL_SIZE_64x64, OBJECT_MATERIAL_SIZE_128x32, OBJECT_MATERIAL_SIZE_128x64, OBJECT_MATERIAL_SIZE_128x128, OBJECT_MATERIAL_SIZE_256x32, OBJECT_MATERIAL_SIZE_256x64, OBJECT_MATERIAL_SIZE_256x128, OBJECT_MATERIAL_SIZE_256x256, OBJECT_MATERIAL_SIZE_512x64, OBJECT_MATERIAL_SIZE_512x128, OBJECT_MATERIAL_SIZE_512x256, OBJECT_MATERIAL_SIZE_512x512 }",
			"code": "native bool:SetPlayerObjectMaterialText(playerid, objectid, const text[], materialIndex = 0, $:materialSize = OBJECT_MATERIAL_SIZE_256x128, const fontFace[] = \\\"Arial\\\", fontSize = 24, bool:bold = true, fontColour = 0xFFFFFFFF, backgroundColour = 0, OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT, OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum OBJECT_MATERIAL_SIZE:__OBJECT_MATERIAL_SIZE (+= 10) { OBJECT_MATERIAL_SIZE_32x32 = 10, OBJECT_MATERIAL_SIZE_64x32, OBJECT_MATERIAL_SIZE_64x64, OBJECT_MATERIAL_SIZE_128x32, OBJECT_MATERIAL_SIZE_128x64, OBJECT_MATERIAL_SIZE_128x128, OBJECT_MATERIAL_SIZE_256x32, OBJECT_MATERIAL_SIZE_256x64, OBJECT_MATERIAL_SIZE_256x128, OBJECT_MATERIAL_SIZE_256x256, OBJECT_MATERIAL_SIZE_512x64, OBJECT_MATERIAL_SIZE_512x128, OBJECT_MATERIAL_SIZE_512x256, OBJECT_MATERIAL_SIZE_512x512 }",
			"code": "native bool:GetObjectMaterialText(objectid, materialIndex, text[], textSize = sizeof (text), &$:materialSize, fontFace[], fontFaceSize = sizeof (fontFace), &fontSize = 0, &bool:bold = true, &fontColour = 0xFFFFFFFF, &backgroundColour = 0, &OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT)"
		},
		{
			"enum": "enum OBJECT_MATERIAL_SIZE:__OBJECT_MATERIAL_SIZE (+= 10) { OBJECT_MATERIAL_SIZE_32x32 = 10, OBJECT_MATERIAL_SIZE_64x32, OBJECT_MATERIAL_SIZE_64x64, OBJECT_MATERIAL_SIZE_128x32, OBJECT_MATERIAL_SIZE_128x64, OBJECT_MATERIAL_SIZE_128x128, OBJECT_MATERIAL_SIZE_256x32, OBJECT_MATERIAL_SIZE_256x64, OBJECT_MATERIAL_SIZE_256x128, OBJECT_MATERIAL_SIZE_256x256, OBJECT_MATERIAL_SIZE_512x64, OBJECT_MATERIAL_SIZE_512x128, OBJECT_MATERIAL_SIZE_512x256, OBJECT_MATERIAL_SIZE_512x512 }",
			"code": "native bool:GetPlayerObjectMaterialText(playerid, objectid, materialIndex, text[], textSize = sizeof (text), &$:materialSize, fontFace[], fontFaceSize = sizeof (fontFace), &fontSize = 0, &bool:bold = true, &fontColour = 0xFFFFFFFF, &backgroundColour = 0, &OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT)"
		},
		{
			"enum": "enum OBJECT_MATERIAL_TEXT_ALIGN:__OBJECT_MATERIAL_TEXT_ALIGN { OBJECT_MATERIAL_TEXT_ALIGN_CENTRE = 1, OBJECT_MATERIAL_TEXT_ALIGN_CENTER = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGHT = 2, OBJECT_MATERIAL_TEXT_ALIGN_LEFT = 0, OBJECT_MATERIAL_TEXT_ALIGN_CENT = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGT = 2 }",
			"code": "native bool:SetObjectMaterialText(objectid, const text[], materialIndex = 0, OBJECT_MATERIAL_SIZE:materialSize = OBJECT_MATERIAL_SIZE_256x128, const fontFace[] = \\\"Arial\\\", fontSize = 24, bool:bold = true, fontColour = 0xFFFFFFFF, backgroundColour = 0, $:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT, OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum OBJECT_MATERIAL_TEXT_ALIGN:__OBJECT_MATERIAL_TEXT_ALIGN { OBJECT_MATERIAL_TEXT_ALIGN_CENTRE = 1, OBJECT_MATERIAL_TEXT_ALIGN_CENTER = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGHT = 2, OBJECT_MATERIAL_TEXT_ALIGN_LEFT = 0, OBJECT_MATERIAL_TEXT_ALIGN_CENT = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGT = 2 }",
			"code": "native bool:SetPlayerObjectMaterialText(playerid, objectid, const text[], materialIndex = 0, OBJECT_MATERIAL_SIZE:materialSize = OBJECT_MATERIAL_SIZE_256x128, const fontFace[] = \\\"Arial\\\", fontSize = 24, bool:bold = true, fontColour = 0xFFFFFFFF, backgroundColour = 0, $:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT, OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum OBJECT_MATERIAL_TEXT_ALIGN:__OBJECT_MATERIAL_TEXT_ALIGN { OBJECT_MATERIAL_TEXT_ALIGN_CENTRE = 1, OBJECT_MATERIAL_TEXT_ALIGN_CENTER = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGHT = 2, OBJECT_MATERIAL_TEXT_ALIGN_LEFT = 0, OBJECT_MATERIAL_TEXT_ALIGN_CENT = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGT = 2 }",
			"code": "native bool:GetObjectMaterialText(objectid, materialIndex, text[], textSize = sizeof (text), &OBJECT_MATERIAL_SIZE:materialSize, fontFace[], fontFaceSize = sizeof (fontFace), &fontSize = 0, &bool:bold = true, &fontColour = 0xFFFFFFFF, &backgroundColour = 0, &$:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT)"
		},
		{
			"enum": "enum OBJECT_MATERIAL_TEXT_ALIGN:__OBJECT_MATERIAL_TEXT_ALIGN { OBJECT_MATERIAL_TEXT_ALIGN_CENTRE = 1, OBJECT_MATERIAL_TEXT_ALIGN_CENTER = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGHT = 2, OBJECT_MATERIAL_TEXT_ALIGN_LEFT = 0, OBJECT_MATERIAL_TEXT_ALIGN_CENT = 1, OBJECT_MATERIAL_TEXT_ALIGN_RIGT = 2 }",
			"code": "native bool:GetPlayerObjectMaterialText(playerid, objectid, materialIndex, text[], textSize = sizeof (text), &OBJECT_MATERIAL_SIZE:materialSize, fontFace[], fontFaceSize = sizeof (fontFace), &fontSize = 0, &bool:bold = true, &fontColour = 0xFFFFFFFF, &backgroundColour = 0, &$:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT)"
		},
		{
			"enum": "enum SPECIAL_ACTION:__SPECIAL_ACTION { SPECIAL_ACTION_NONE, SPECIAL_ACTION_DUCK, SPECIAL_ACTION_USEJETPACK, SPECIAL_ACTION_ENTER_VEHICLE, SPECIAL_ACTION_EXIT_VEHICLE, SPECIAL_ACTION_DANCE1, SPECIAL_ACTION_DANCE2, SPECIAL_ACTION_DANCE3, SPECIAL_ACTION_DANCE4, SPECIAL_ACTION_HANDSUP = 10, SPECIAL_ACTION_USECELLPHONE, SPECIAL_ACTION_SITTING, SPECIAL_ACTION_STOPUSECELLPHONE, SPECIAL_ACTION_DRINK_BEER = 20, SPECIAL_ACTION_SMOKE_CIGGY, SPECIAL_ACTION_DRINK_WINE, SPECIAL_ACTION_DRINK_SPRUNK, SPECIAL_ACTION_CUFFED, SPECIAL_ACTION_CARRY, SPECIAL_ACTION_PISSING = 68 }",
			"code": "native SetPlayerSpecialAction(playerid, $:actionid)"
		},
		{
			"enum": "enum FIGHT_STYLE:__FIGHT_STYLE { FIGHT_STYLE_NORMAL = 4, FIGHT_STYLE_BOXING, FIGHT_STYLE_KUNGFU, FIGHT_STYLE_KNEEHEAD, FIGHT_STYLE_GRABKICK = 15, FIGHT_STYLE_ELBOW }",
			"code": "native SetPlayerFightingStyle(playerid, $:style)"
		},
		{
			"enum": "enum WEAPONSKILL:__WEAPONSKILL { WEAPONSKILL_PISTOL, WEAPONSKILL_PISTOL_SILENCED, WEAPONSKILL_DESERT_EAGLE, WEAPONSKILL_SHOTGUN, WEAPONSKILL_SAWNOFF_SHOTGUN, WEAPONSKILL_SPAS12_SHOTGUN, WEAPONSKILL_MICRO_UZI, WEAPONSKILL_MP5, WEAPONSKILL_AK47, WEAPONSKILL_M4, WEAPONSKILL_SNIPERRIFLE }",
			"code": "native bool:SetPlayerSkillLevel(playerid, $:skill, level)"
		},
		{
			"enum": "enum WEAPONSKILL:__WEAPONSKILL { WEAPONSKILL_PISTOL, WEAPONSKILL_PISTOL_SILENCED, WEAPONSKILL_DESERT_EAGLE, WEAPONSKILL_SHOTGUN, WEAPONSKILL_SAWNOFF_SHOTGUN, WEAPONSKILL_SPAS12_SHOTGUN, WEAPONSKILL_MICRO_UZI, WEAPONSKILL_MP5, WEAPONSKILL_AK47, WEAPONSKILL_M4, WEAPONSKILL_SNIPERRIFLE }",
			"code": "native GetPlayerSkillLevel(playerid, $:skill)"
		},
		{
			"enum": "enum KEY:__KEY (<<= 1) { KEY_ACTION = 1, KEY_CROUCH, KEY_FIRE, KEY_SPRINT, KEY_SECONDARY_ATTACK, KEY_JUMP, KEY_LOOK_RIGHT, KEY_HANDBRAKE, KEY_LOOK_LEFT, KEY_SUBMISSION, KEY_LOOK_BEHIND = KEY_SUBMISSION, KEY_WALK, KEY_ANALOG_UP, KEY_ANALOG_DOWN, KEY_ANALOG_LEFT, KEY_ANALOG_RIGHT, KEY_YES = 65536, KEY_NO, KEY_CTRL_BACK, KEY_UP = -128, KEY_DOWN = 128, KEY_LEFT = -128, KEY_RIGHT = 128 }",
			"code": "native GetPlayerKeys(playerid, &$:keys, &$:updown, &$:leftright)"
		},
		{
			"enum": "enum CAM_MOVE:__CAMERA { CAMERA_MOVE = 1, CAMERA_CUT }",
			"code": "native SetPlayerCameraLookAt(playerid, Float:x, Float:y, Float:z, $:cut = CAMERA_CUT)"
		},
		{
			"enum": "enum CAM_MOVE:__CAMERA { CAMERA_MOVE = 1, CAMERA_CUT }",
			"code": "native InterpolateCameraPos(playerid, Float:fromX, Float:fromY, Float:fromZ, Float:toX, Float:toY, Float:toZ, time, $:cut = CAMERA_CUT)"
		},
		{
			"enum": "enum CAM_MOVE:__CAMERA { CAMERA_MOVE = 1, CAMERA_CUT }",
			"code": "native InterpolateCameraLookAt(playerid, Float:fromX, Float:fromY, Float:fromZ, Float:toX, Float:toY, Float:toZ, time, $:cut = CAMERA_CUT)"
		},
		{
			"enum": "enum MAPICON:__MAPICON { MAPICON_LOCAL, MAPICON_GLOBAL, MAPICON_LOCAL_CHECKPOINT, MAPICON_GLOBAL_CHECKPOINT }",
			"code": "native SetPlayerMapIcon(playerid, iconid, Float:x, Float:y, Float:z, markerType, colour, $:style = MAPICON_LOCAL)"
		},
		{
			"enum": "enum SPECTATE_MODE:__SPECTATE_MODE { SPECTATE_MODE_NORMAL = 1, SPECTATE_MODE_FIXED, SPECTATE_MODE_SIDE }",
			"code": "native PlayerSpectatePlayer(playerid, targetid, $:mode = SPECTATE_MODE_NORMAL)"
		},
		{
			"enum": "enum SPECTATE_MODE:__SPECTATE_MODE { SPECTATE_MODE_NORMAL = 1, SPECTATE_MODE_FIXED, SPECTATE_MODE_SIDE }",
			"code": "native PlayerSpectateVehicle(playerid, targetid, $:mode = SPECTATE_MODE_NORMAL)"
		},
		{
			"enum": "enum PLAYER_RECORDING_TYPE:__PLAYER_RECORDING_TYPE { PLAYER_RECORDING_TYPE_NONE, PLAYER_RECORDING_TYPE_DRIVER, PLAYER_RECORDING_TYPE_ONFOOT }",
			"code": "native bool:StartRecordingPlayerData(playerid, $:recordType, const recordFile[])"
		},
		{
			"enum": "enum FORCE_SYNC:__FORCE_SYNC { SYNC_NONE, SYNC_ALL, SYNC_OTHER }",
			"code": "native ApplyAnimation(playerid, const animationLibrary[], const animationName[], Float:delta, bool:loop, bool:lockX, bool:lockY, bool:freeze, time, $:forceSync = SYNC_NONE)"
		},
		{
			"enum": "enum FORCE_SYNC:__FORCE_SYNC { SYNC_NONE, SYNC_ALL, SYNC_OTHER }",
			"code": "native ClearAnimations(playerid, $:forceSync = SYNC_NONE)"
		},
		{
			"enum": "enum TEXT_DRAW_FONT:__TEXT_DRAW_FONT { TEXT_DRAW_FONT_0, TEXT_DRAW_FONT_1, TEXT_DRAW_FONT_2, TEXT_DRAW_FONT_3, TEXT_DRAW_FONT_SPRITE_DRAW, TEXT_DRAW_FONT_MODEL_PREVIEW }",
			"code": "native bool:TextDrawFont(Text:textid, $:font)"
		},
		{
			"enum": "enum TEXT_DRAW_FONT:__TEXT_DRAW_FONT { TEXT_DRAW_FONT_0, TEXT_DRAW_FONT_1, TEXT_DRAW_FONT_2, TEXT_DRAW_FONT_3, TEXT_DRAW_FONT_SPRITE_DRAW, TEXT_DRAW_FONT_MODEL_PREVIEW }",
			"code": "native bool:PlayerTextDrawFont(playerid, PlayerText:textid, $:font)"
		},
		{
			"enum": "enum TEXT_DRAW_ALIGN:__TEXT_DRAW_ALIGN { TEXT_DRAW_ALIGN_LEFT = 1, TEXT_DRAW_ALIGN_CENTRE, TEXT_DRAW_ALIGN_CENTER = TEXT_DRAW_ALIGN_CENTRE, TEXT_DRAW_ALIGN_RIGHT }",
			"code": "native bool:TextDrawAlignment(Text:textid, $:alignment)"
		},
		{
			"enum": "enum TEXT_DRAW_ALIGN:__TEXT_DRAW_ALIGN { TEXT_DRAW_ALIGN_LEFT = 1, TEXT_DRAW_ALIGN_CENTRE, TEXT_DRAW_ALIGN_CENTER = TEXT_DRAW_ALIGN_CENTRE, TEXT_DRAW_ALIGN_RIGHT }",
			"code": "native bool:PlayerTextDrawAlignment(playerid, PlayerText:textid, $:alignment)"
		},
		{
			"enum": "enum CARMODTYPE:__CARMODTYPE { CARMODTYPE_NONE = -1, CARMODTYPE_SPOILER, CARMODTYPE_HOOD, CARMODTYPE_ROOF, CARMODTYPE_SIDESKIRT, CARMODTYPE_LAMPS, CARMODTYPE_NITRO, CARMODTYPE_EXHAUST, CARMODTYPE_WHEELS, CARMODTYPE_STEREO, CARMODTYPE_HYDRAULICS, CARMODTYPE_FRONT_BUMPER, CARMODTYPE_REAR_BUMPER, CARMODTYPE_VENT_RIGHT, CARMODTYPE_VENT_LEFT, CARMODTYPE_FRONT_BULLBAR, CARMODTYPE_REAR_BULLBAR }",
			"code": "native GetVehicleComponentInSlot(vehicleid, $:slot)"
		},
		{
			"enum": "enum VEHICLE_MODEL_INFO:__VEHICLE_MODEL_INFO { VEHICLE_MODEL_INFO_SIZE = 1, VEHICLE_MODEL_INFO_FRONT_SEAT, VEHICLE_MODEL_INFO_REAR_SEAT, VEHICLE_MODEL_INFO_PETROL_CAP, VEHICLE_MODEL_INFO_WHEELS_FRONT, VEHICLE_MODEL_INFO_WHEELS_REAR, VEHICLE_MODEL_INFO_WHEELS_MID, VEHICLE_MODEL_INFO_FRONT_BUMPER_Z, VEHICLE_MODEL_INFO_REAR_BUMPER_Z, VEHICLE_MODEL_INFO_FRONTSEAT = VEHICLE_MODEL_INFO_FRONT_SEAT, VEHICLE_MODEL_INFO_REARSEAT, VEHICLE_MODEL_INFO_PETROLCAP, VEHICLE_MODEL_INFO_WHEELSFRONT, VEHICLE_MODEL_INFO_WHEELSREAR, VEHICLE_MODEL_INFO_WHEELSMID, VEHICLE_MODEL_INFO_FRONT_BUMPER, VEHICLE_MODEL_INFO_REAR_BUMPER }",
			"code": "native bool:GetVehicleModelInfo(vehiclemodel, $:infotype, &Float:x, &Float:y, &Float:z)"
		},
		{
			"enum": "enum VEHICLE_PANEL_STATUS:__VEHICLE_PANEL_STATUS { VEHICLE_PANEL_STATUS_NONE = 0 }",
			"code": "native bool:GetVehicleDamageStatus(vehicleid, &$:panels, &VEHICLE_DOOR_STATUS:doors, &VEHICLE_LIGHT_STATUS:lights, &VEHICLE_TYRE_STATUS:tyres)"
		},
		{
			"enum": "enum VEHICLE_PANEL_STATUS:__VEHICLE_PANEL_STATUS { VEHICLE_PANEL_STATUS_NONE = 0 }",
			"code": "native bool:UpdateVehicleDamageStatus(vehicleid, $:panels, VEHICLE_DOOR_STATUS:doors, VEHICLE_LIGHT_STATUS:lights, VEHICLE_TYRE_STATUS:tires)"
		},
		{
			"enum": "enum VEHICLE_DOOR_STATUS:__VEHICLE_DOOR_STATUS (<<= 1) { VEHICLE_DOOR_STATUS_NONE = 0, VEHICLE_DOOR_STATUS_BONNET_OPEN = 1, VEHICLE_DOOR_STATUS_BONNET_DAMAGED, VEHICLE_DOOR_STATUS_BONNET_MISSING, VEHICLE_DOOR_STATUS_HOOD_OPEN = VEHICLE_DOOR_STATUS_BONNET_OPEN, VEHICLE_DOOR_STATUS_HOOD_DAMAGED, VEHICLE_DOOR_STATUS_HOOD_MISSING, VEHICLE_DOOR_STATUS_BOOT_OPEN = 256, VEHICLE_DOOR_STATUS_BOOT_DAMAGED, VEHICLE_DOOR_STATUS_BOOT_MISSING, VEHICLE_DOOR_STATUS_TRUCK_OPEN = VEHICLE_DOOR_STATUS_BOOT_OPEN, VEHICLE_DOOR_STATUS_TRUCK_DAMAGED, VEHICLE_DOOR_STATUS_TRUCK_MISSING, VEHICLE_DOOR_STATUS_FRONT_LEFT_OPEN = 65536, VEHICLE_DOOR_STATUS_FRONT_LEFT_DAMAGED, VEHICLE_DOOR_STATUS_FRONT_LEFT_MISSING, VEHICLE_DOOR_STATUS_DRIVER_OPEN = VEHICLE_DOOR_STATUS_FRONT_LEFT_OPEN, VEHICLE_DOOR_STATUS_DRIVER_DAMAGED, VEHICLE_DOOR_STATUS_DRIVER_MISSING, VEHICLE_DOOR_STATUS_FRONT_RIGHT_OPEN = 16777216, VEHICLE_DOOR_STATUS_FRONT_RIGHT_DAMAGED, VEHICLE_DOOR_STATUS_FRONT_RIGHT_MISSING, VEHICLE_DOOR_STATUS_PASSENGER_OPEN = VEHICLE_DOOR_STATUS_FRONT_RIGHT_OPEN, VEHICLE_DOOR_STATUS_PASSENGER_DAMAGED, VEHICLE_DOOR_STATUS_PASSENGER_MISSING, CARDOOR_NONE = 0, CARDOOR_BONNET_OPEN = 1, CARDOOR_BONNET_DAMAGED, CARDOOR_BONNET_MISSING, CARDOOR_HOOD_OPEN = CARDOOR_BONNET_OPEN, CARDOOR_HOOD_DAMAGED, CARDOOR_HOOD_MISSING, CARDOOR_BOOT_OPEN = 256, CARDOOR_BOOT_DAMAGED, CARDOOR_BOOT_MISSING, CARDOOR_TRUCK_OPEN = CARDOOR_BOOT_OPEN, CARDOOR_TRUCK_DAMAGED, CARDOOR_TRUCK_MISSING, CARDOOR_FRONT_LEFT_OPEN = 65536, CARDOOR_FRONT_LEFT_DAMAGED, CARDOOR_FRONT_LEFT_MISSING, CARDOOR_DRIVER_OPEN = CARDOOR_FRONT_LEFT_OPEN, CARDOOR_DRIVER_DAMAGED, CARDOOR_DRIVER_MISSING, CARDOOR_FRONT_RIGHT_OPEN = 16777216, CARDOOR_FRONT_RIGHT_DAMAGED, CARDOOR_FRONT_RIGHT_MISSING, CARDOOR_PASSENGER_OPEN = CARDOOR_FRONT_RIGHT_OPEN, CARDOOR_PASSENGER_DAMAGED, CARDOOR_PASSENGER_MISSING }",
			"code": "native bool:GetVehicleDamageStatus(vehicleid, &VEHICLE_PANEL_STATUS:panels, &$:doors, &VEHICLE_LIGHT_STATUS:lights, &VEHICLE_TYRE_STATUS:tyres)"
		},
		{
			"enum": "enum VEHICLE_DOOR_STATUS:__VEHICLE_DOOR_STATUS (<<= 1) { VEHICLE_DOOR_STATUS_NONE = 0, VEHICLE_DOOR_STATUS_BONNET_OPEN = 1, VEHICLE_DOOR_STATUS_BONNET_DAMAGED, VEHICLE_DOOR_STATUS_BONNET_MISSING, VEHICLE_DOOR_STATUS_HOOD_OPEN = VEHICLE_DOOR_STATUS_BONNET_OPEN, VEHICLE_DOOR_STATUS_HOOD_DAMAGED, VEHICLE_DOOR_STATUS_HOOD_MISSING, VEHICLE_DOOR_STATUS_BOOT_OPEN = 256, VEHICLE_DOOR_STATUS_BOOT_DAMAGED, VEHICLE_DOOR_STATUS_BOOT_MISSING, VEHICLE_DOOR_STATUS_TRUCK_OPEN = VEHICLE_DOOR_STATUS_BOOT_OPEN, VEHICLE_DOOR_STATUS_TRUCK_DAMAGED, VEHICLE_DOOR_STATUS_TRUCK_MISSING, VEHICLE_DOOR_STATUS_FRONT_LEFT_OPEN = 65536, VEHICLE_DOOR_STATUS_FRONT_LEFT_DAMAGED, VEHICLE_DOOR_STATUS_FRONT_LEFT_MISSING, VEHICLE_DOOR_STATUS_DRIVER_OPEN = VEHICLE_DOOR_STATUS_FRONT_LEFT_OPEN, VEHICLE_DOOR_STATUS_DRIVER_DAMAGED, VEHICLE_DOOR_STATUS_DRIVER_MISSING, VEHICLE_DOOR_STATUS_FRONT_RIGHT_OPEN = 16777216, VEHICLE_DOOR_STATUS_FRONT_RIGHT_DAMAGED, VEHICLE_DOOR_STATUS_FRONT_RIGHT_MISSING, VEHICLE_DOOR_STATUS_PASSENGER_OPEN = VEHICLE_DOOR_STATUS_FRONT_RIGHT_OPEN, VEHICLE_DOOR_STATUS_PASSENGER_DAMAGED, VEHICLE_DOOR_STATUS_PASSENGER_MISSING, CARDOOR_NONE = 0, CARDOOR_BONNET_OPEN = 1, CARDOOR_BONNET_DAMAGED, CARDOOR_BONNET_MISSING, CARDOOR_HOOD_OPEN = CARDOOR_BONNET_OPEN, CARDOOR_HOOD_DAMAGED, CARDOOR_HOOD_MISSING, CARDOOR_BOOT_OPEN = 256, CARDOOR_BOOT_DAMAGED, CARDOOR_BOOT_MISSING, CARDOOR_TRUCK_OPEN = CARDOOR_BOOT_OPEN, CARDOOR_TRUCK_DAMAGED, CARDOOR_TRUCK_MISSING, CARDOOR_FRONT_LEFT_OPEN = 65536, CARDOOR_FRONT_LEFT_DAMAGED, CARDOOR_FRONT_LEFT_MISSING, CARDOOR_DRIVER_OPEN = CARDOOR_FRONT_LEFT_OPEN, CARDOOR_DRIVER_DAMAGED, CARDOOR_DRIVER_MISSING, CARDOOR_FRONT_RIGHT_OPEN = 16777216, CARDOOR_FRONT_RIGHT_DAMAGED, CARDOOR_FRONT_RIGHT_MISSING, CARDOOR_PASSENGER_OPEN = CARDOOR_FRONT_RIGHT_OPEN, CARDOOR_PASSENGER_DAMAGED, CARDOOR_PASSENGER_MISSING }",
			"code": "native bool:UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS:panels, $:doors, VEHICLE_LIGHT_STATUS:lights, VEHICLE_TYRE_STATUS:tires)"
		},
		{
			"enum": "enum VEHICLE_LIGHT_STATUS:__VEHICLE_LIGHT_STATUS { VEHICLE_LIGHT_STATUS_FRONT_LEFT_BROKEN = 1, VEHICLE_LIGHT_STATUS_FRONT_RIGHT_BROKEN = 4, VEHICLE_LIGHT_STATUS_DRIVER_BROKEN = VEHICLE_LIGHT_STATUS_FRONT_LEFT_BROKEN, VEHICLE_LIGHT_STATUS_PASSENGER_BROKEN = VEHICLE_LIGHT_STATUS_FRONT_RIGHT_BROKEN, VEHICLE_LIGHT_STATUS_REAR_BROKEN = 1024, CARLIGHT_FRONT_LEFT_BROKEN = 1, CARLIGHT_FRONT_RIGHT_BROKEN = 4, CARLIGHT_DRIVER_BROKEN = CARLIGHT_FRONT_LEFT_BROKEN, CARLIGHT_PASSENGER_BROKEN = CARLIGHT_FRONT_RIGHT_BROKEN, CARLIGHT_REAR_BROKEN = 1024 }",
			"code": "native bool:GetVehicleDamageStatus(vehicleid, &VEHICLE_PANEL_STATUS:panels, &VEHICLE_DOOR_STATUS:doors, &$:lights, &VEHICLE_TYRE_STATUS:tyres)"
		},
		{
			"enum": "enum VEHICLE_LIGHT_STATUS:__VEHICLE_LIGHT_STATUS { VEHICLE_LIGHT_STATUS_FRONT_LEFT_BROKEN = 1, VEHICLE_LIGHT_STATUS_FRONT_RIGHT_BROKEN = 4, VEHICLE_LIGHT_STATUS_DRIVER_BROKEN = VEHICLE_LIGHT_STATUS_FRONT_LEFT_BROKEN, VEHICLE_LIGHT_STATUS_PASSENGER_BROKEN = VEHICLE_LIGHT_STATUS_FRONT_RIGHT_BROKEN, VEHICLE_LIGHT_STATUS_REAR_BROKEN = 1024, CARLIGHT_FRONT_LEFT_BROKEN = 1, CARLIGHT_FRONT_RIGHT_BROKEN = 4, CARLIGHT_DRIVER_BROKEN = CARLIGHT_FRONT_LEFT_BROKEN, CARLIGHT_PASSENGER_BROKEN = CARLIGHT_FRONT_RIGHT_BROKEN, CARLIGHT_REAR_BROKEN = 1024 }",
			"code": "native bool:UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS:panels, VEHICLE_DOOR_STATUS:doors, $:lights, VEHICLE_TYRE_STATUS:tires)"
		},
		{
			"enum": "enum VEHICLE_TYRE_STATUS:__VEHICLE_TYRE_STATUS { VEHICLE_TYRE_STATUS_FRONT_LEFT_POPPED = 8, VEHICLE_TYRE_STATUS_FRONT_RIGHT_POPPED = 2, VEHICLE_TYRE_STATUS_REAR_LEFT_POPPED = 4, VEHICLE_TYRE_STATUS_REAR_RIGHT_POPPED = 1, VEHICLE_TIRE_STATUS_FRONT_LEFT_POPPED = 8, VEHICLE_TIRE_STATUS_FRONT_RIGHT_POPPED = 2, VEHICLE_TIRE_STATUS_REAR_LEFT_POPPED = 4, VEHICLE_TIRE_STATUS_REAR_RIGHT_POPPED = 1, CARTYRE_FRONT_LEFT_POPPED = 8, CARTYRE_FRONT_RIGHT_POPPED = 2, CARTYRE_REAR_LEFT_POPPED = 4, CARTYRE_REAR_RIGHT_POPPED = 1, CARTIRE_FRONT_LEFT_POPPED = 8, CARTIRE_FRONT_RIGHT_POPPED = 2, CARTIRE_REAR_LEFT_POPPED = 4, CARTIRE_REAR_RIGHT_POPPED = 1 }",
			"code": "native bool:GetVehicleDamageStatus(vehicleid, &VEHICLE_PANEL_STATUS:panels, &VEHICLE_DOOR_STATUS:doors, &VEHICLE_LIGHT_STATUS:lights, &$:tyres)"
		},
		{
			"enum": "enum VEHICLE_TYRE_STATUS:__VEHICLE_TYRE_STATUS { VEHICLE_TYRE_STATUS_FRONT_LEFT_POPPED = 8, VEHICLE_TYRE_STATUS_FRONT_RIGHT_POPPED = 2, VEHICLE_TYRE_STATUS_REAR_LEFT_POPPED = 4, VEHICLE_TYRE_STATUS_REAR_RIGHT_POPPED = 1, VEHICLE_TIRE_STATUS_FRONT_LEFT_POPPED = 8, VEHICLE_TIRE_STATUS_FRONT_RIGHT_POPPED = 2, VEHICLE_TIRE_STATUS_REAR_LEFT_POPPED = 4, VEHICLE_TIRE_STATUS_REAR_RIGHT_POPPED = 1, CARTYRE_FRONT_LEFT_POPPED = 8, CARTYRE_FRONT_RIGHT_POPPED = 2, CARTYRE_REAR_LEFT_POPPED = 4, CARTYRE_REAR_RIGHT_POPPED = 1, CARTIRE_FRONT_LEFT_POPPED = 8, CARTIRE_FRONT_RIGHT_POPPED = 2, CARTIRE_REAR_LEFT_POPPED = 4, CARTIRE_REAR_RIGHT_POPPED = 1 }",
			"code": "native bool:UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS:panels, VEHICLE_DOOR_STATUS:doors, VEHICLE_LIGHT_STATUS:lights, $:tires)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native SetTimer(const functionName[], interval, $:repeating)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native SetTimerEx(const functionName[], interval, $:repeating, const specifiers[] = \\\"\\\", OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native Text3D:Create3DTextLabel(const text[], colour, Float:x, Float:y, Float:z, Float:drawDistance, virtualWorld, $:testLOS = false, OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native PlayerText3D:CreatePlayer3DTextLabel(playerid, const text[], colour, Float:x, Float:y, Float:z, Float:drawDistance, parentPlayerid = INVALID_PLAYER_ID, parentVehicleid = INVALID_VEHICLE_ID, $:testLOS = false, OPEN_MP_TAGS:...)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native TogglePlayerControllable(playerid, $:controllable)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native void:AllowInteriorWeapons($:allow)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native AllowPlayerTeleport(playerid, $:allow)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native void:AllowAdminTeleport($:allow)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native CreateVehicle(modelid, Float:spawnX, Float:spawnY, Float:spawnZ, Float:angle, colour1, colour2, respawnDelay, $:addSiren = false)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native AddStaticVehicleEx(modelid, Float:spawnX, Float:spawnY, Float:spawnZ, Float:angle, colour1, colour2, respawnDelay, $:addSiren = false)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native TogglePlayerSpectating(playerid, $:toggle)"
		},
		{
			"enum": "enum bool:__bool { false, true }",
			"code": "native TogglePlayerClock(playerid, $:toggle)"
		}
	]
}

